name: Pull Request

on:
  pull_request:

jobs:
  API-Unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: npm ci
      working-directory: api

    - name: Typescript Check
      run: npx tsc
      working-directory: api

    - name: Unit Test
      run: npm run test:unit
      working-directory: api

    - name: Linting
      run: npm run lint
      working-directory: api

  Web-Unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: npm ci
      working-directory: web

    - name: Typescript Check
      run: npx tsc
      working-directory: web

    - name: Unit Test
      run: npm test
      working-directory: web

    - name: Lint
      run: npm run lint
      working-directory: web

  API-Integration:
    runs-on: ubuntu-latest
    needs:
      - API-Unit
    container: node
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: pipeline
          POSTGRES_USER: pipeline
          POSTGRES_PASSWORD: pipeline
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci
        working-directory: api

      - name: Start API
        run: npm run start & sleep 10
        working-directory: api
        env:
          EXPRESS_SECRET_KEY: pipeline
          API_PORT: 7071
          API_DATABASE_NAME: pipeline
          API_DATABASE_USERNAME: pipeline
          API_DATABASE_PASSWORD: pipeline
          API_DATABASE_HOST: postgres
          API_REDIS_PASSWORD: ""
          API_REDIS_HOST: redis
          API_SEED_DATABASE: "true"

      - name: Run integration tests
        run: npm run test:integration
        working-directory: api
        env:
          EXPRESS_SECRET_KEY: pipeline
          API_PORT: 7071

  Web-E2E:
    runs-on: ubuntu-latest
    needs:
      - Web-Unit
      - API-Integration
    container: node
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: pipeline
          POSTGRES_USER: pipeline
          POSTGRES_PASSWORD: pipeline
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4

      - name: Install API dependencies
        run: npm ci
        working-directory: api

      - name: Install Web dependencies
        run: npm ci
        working-directory: web

      - name: Install playwright browsers
        run: npx playwright install --with-deps chromium
        working-directory: web

      - name: Start API
        run: npm run start & sleep 10
        working-directory: api
        env:
          EXPRESS_SECRET_KEY: pipeline
          API_PORT: 3000
          API_DATABASE_NAME: pipeline
          API_DATABASE_USERNAME: pipeline
          API_DATABASE_PASSWORD: pipeline
          API_DATABASE_HOST: postgres
          API_REDIS_PASSWORD: ""
          API_REDIS_HOST: redis
          API_SEED_DATABASE: "true"

      - name: Start Web
        run: npm run start & sleep 2
        working-directory: web

      - name: Run Playwright
        run: npm run e2e:trace
        working-directory: web

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: web/playwright/report
